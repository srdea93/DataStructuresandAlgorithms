------------------------------------ Problem 1 ------------------------------------
 // What is the Big O of the below function? (Hint, you may want to go line by line)
 function funChallenge(input) {
   let a = 10; O(1)
   a = 50 + 3; O(1)

   for (let i = 0; i < input.length; i++) { O(n)
    anotherFunction(); O(n)
     let stranger = true; O(n)
     a++; O(n)
   }
   return a; O(1)
 }

------------------------------------ Answer 1 ------------------------------------
O(3 + 4n) = O(n)


------------------------------------ Problem 2 ------------------------------------
// What is the Big O of the below function? (Hint, you may want to go line by line)
function anotherFunChallenge(input) {
  let a = 5; O(1)
  let b = 10; O(1)
  let c = 50; O(1)
  for (let i = 0; i < input; i++) { O(n)
    let x = i + 1; O(n)
    let y = i + 2; O(n)
    let z = i + 3; O(n)

  }
  for (let j = 0; j < input; j++) { O(n)
    let p = j * 2; O(n)
    let q = j * 2; O(n)
  }
  let whoAmI = "I don't know"; O(1)
}

------------------------------------ Answer 2 ------------------------------------
O(4 + 7n) = O(n)

------------------------------------ Problem 3 (Own Example) ------------------------------------
function two_inputs(input1, input2):
    for inputs in input1:
        do_something()
    for inputs in input2:
        do_something_else()
    return something

------------------------------------ Answer 3 ------------------------------------
O(n+m) - different inputs require different Big O variables